{"remainingRequest":"/Users/pallavi/Personal/pallavibl/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/pallavi/Personal/pallavibl/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/pallavi/Personal/pallavibl/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/pallavi/Personal/pallavibl/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/pallavi/Personal/pallavibl/docs/blog/2020-4-15-our-yoga-routine.md?vue&type=template&id=237b802f&","dependencies":[{"path":"/Users/pallavi/Personal/pallavibl/docs/blog/2020-4-15-our-yoga-routine.md","mtime":1588571742944},{"path":"/Users/pallavi/Personal/pallavibl/node_modules/cache-loader/dist/cjs.js","mtime":1585633548553},{"path":"/Users/pallavi/Personal/pallavibl/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1585633552662},{"path":"/Users/pallavi/Personal/pallavibl/node_modules/cache-loader/dist/cjs.js","mtime":1585633548553},{"path":"/Users/pallavi/Personal/pallavibl/node_modules/vue-loader/lib/index.js","mtime":1585633552661},{"path":"/Users/pallavi/Personal/pallavibl/node_modules/@vuepress/markdown-loader/index.js","mtime":1585633548052}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}