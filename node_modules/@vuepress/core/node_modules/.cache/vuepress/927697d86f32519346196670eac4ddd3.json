{"remainingRequest":"/Users/sagarmahapatra/personal/website/pallavibl/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sagarmahapatra/personal/website/pallavibl/layouts/Reciepe.vue?vue&type=template&id=2d65c809&","dependencies":[{"path":"/Users/sagarmahapatra/personal/website/pallavibl/layouts/Reciepe.vue","mtime":1588316349376},{"path":"/Users/sagarmahapatra/personal/website/pallavibl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sagarmahapatra/personal/website/pallavibl/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/sagarmahapatra/personal/website/pallavibl/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sagarmahapatra/personal/website/pallavibl/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}